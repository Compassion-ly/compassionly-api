"""Initialize models

Revision ID: e2412789c190
Revises:
Create Date: 2023-11-24 22:55:43.195942

"""
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects.postgresql import ENUM

# revision identifiers, used by Alembic.
revision = "e2412789c190"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    gender_enum = ENUM('male', 'female', name='gender_types', metadata=sa.MetaData(), create_type=True)
    gender_enum.create(op.get_bind(), checkfirst=True)


    # CREATE TABLE schools
    op.create_table('schools',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('npsn', sa.String(), nullable=False),
        sa.Column('school_name', sa.String(), nullable=False),
        sa.Column('school_province', sa.String(), nullable=False),
        sa.Column('school_city', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schools_npsn'), 'schools', ['npsn'], unique=True)


    # CREATE TABLE user_schools
    op.create_table('user_schools',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('school_id', sa.Integer(), sa.ForeignKey('schools.id'), nullable=False),
        sa.Column('school_name', sa.String(), nullable=False),
        sa.Column('school_major', sa.String(), nullable=False),
        sa.Column('class', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_schools_school_id'), 'user_schools', ['school_id'], unique=False)
    op.create_index(op.f('ix_user_schools_class'), 'user_schools', ['class'], unique=False)


    # CREATE TABLE users
    op.create_table(
        "users",
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        # uid for firebase auth
        sa.Column("uid", sa.String(), nullable=True),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True, server_default="true"),
        sa.Column('first_name', sa.String(), nullable=True),
        sa.Column('last_name', sa.String(), nullable=True),
        sa.Column('phone_number', sa.String(), nullable=True),
        sa.Column('gender', gender_enum, nullable=True),
        sa.Column('user_schools_id', sa.Integer(), sa.ForeignKey('user_schools.id'), nullable=True),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "users", ["email"], unique=True)
    
    # generate dummy schools data
    schools = sa.table(
        "schools",
        sa.column("npsn"),
        sa.column("school_name"),
        sa.column("school_province"),
        sa.column("school_city"),
    )

    op.bulk_insert(
        schools,
        [
            {"npsn": "12345678", "school_name": "SMA Negeri 1", "school_province": "Jawa Barat", "school_city": "Bandung"},
            {"npsn": "87654321", "school_name": "SMA Negeri 2", "school_province": "Jawa Barat", "school_city": "Bandung"},
            {"npsn": "23456789", "school_name": "SMA Negeri 3", "school_province": "Jawa Barat", "school_city": "Bandung"},
        ]
    )

    # generate dummy user_schools data
    user_schools = sa.table(
        "user_schools",
        sa.column("school_id"),
        sa.column("school_name"),
        sa.column("school_major"),
        sa.column("class"),
    )

    op.bulk_insert(
        user_schools,
        [
            {"school_id": 1, "school_name": "SMA Negeri 1", "school_major": "IPA", "class": 10},
            {"school_id": 2, "school_name": "SMA Negeri 2", "school_major": "IPS", "class": 11},
            {"school_id": 3, "school_name": "SMA Negeri 3", "school_major": "IPA", "class": 12},
        ]
    )

    # generate dummy users data
    users = sa.table(
        "users",
        sa.column("email"),
        sa.column("is_active"),
        sa.column("first_name"),
        sa.column("last_name"),
        sa.column("phone_number"),
        sa.column("gender"),
        sa.column("user_schools_id"),
        sa.column("hashed_password"),
    )

    op.bulk_insert(
        users,
        [
            {
                "email": "zidanutomo@gmail.com",
                "is_active": True,
                "first_name": "Zidan",
                "last_name": "Utomo",
                "phone_number": "089644761687",
                "gender": "male",
                "user_schools_id": 1,
                "hashed_password": "",
            }
        ]
    )

    # reset seq
    op.execute("SELECT setval('schools_id_seq', (SELECT max(id) FROM schools))")
    op.execute("SELECT setval('user_schools_id_seq', (SELECT max(id) FROM user_schools))")
    op.execute("SELECT setval('users_id_seq', (SELECT max(id) FROM users))")
    
    # ### end Alembic commands ###


def downgrade():
    # ### drop tables ###
    op.drop_table('users')
    op.drop_table('user_schools')
    op.drop_table('schools')
    ENUM(name='gender_types', metadata=sa.MetaData()).drop(op.get_bind(), checkfirst=True)

