"""adjust table major

Revision ID: af4e1afa9f64
Revises: f30f21e2cbc6
Create Date: 2024-06-12 15:24:27.104220

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'af4e1afa9f64'
down_revision = 'f30f21e2cbc6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('major', sa.Column('major_interest', sa.Integer(), nullable=True))
    op.add_column('major', sa.Column('major_level', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('major', sa.Column('for_who', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###

    # Update existing data
    updates = [
        {"id": 1, "major_interest": 10, "major_level": "Undergraduate", "for_who": "Tech enthusiasts"},
        {"id": 2, "major_interest": 8, "major_level": "Undergraduate", "for_who": "Problem solvers"},
        # Add more records as needed
    ]

    # Use the SQLAlchemy connection to perform updates
    conn = op.get_bind()
    for update in updates:
        conn.execute(
            sa.text(
                "UPDATE major SET major_interest = :major_interest, major_level = :major_level, for_who = :for_who WHERE id = :id"
            ),
            {"id": update["id"], "major_interest": update["major_interest"], "major_level": update["major_level"], "for_who": update["for_who"]}
        )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('major', 'for_who')
    op.drop_column('major', 'major_level')
    op.drop_column('major', 'major_interest')
    # ### end Alembic commands ###
